function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

// 生成随机时间间隔
function getRandomTime(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min) * 1000;
}

async function deleteItems() {
    while(true) {
        try {
            // 1. 找到并点击第一个下拉按钮
            const dropdownBtn = document.querySelector('.woo-font.woo-font--angleDown.morepop_action_bk3Fq');
            if(!dropdownBtn) {
                console.log('没有找到更多按钮，任务完成');
                break;
            }
            dropdownBtn.click();
            
            // 等待1-3秒随机时间
            const firstWait = getRandomTime(1, 3);
            console.log(`等待${firstWait/1000}秒...`);
            await sleep(firstWait);
            
            // 2. 找到并点击删除按钮
            const menuItems = document.querySelectorAll('.woo-box-flex.woo-box-alignCenter.woo-pop-item-main');
            let deleteBtn = null;
            
            for(const item of menuItems) {
                if(item.textContent.includes('删除')) {
                    deleteBtn = item;
                    break;
                }
            }
            
            if(!deleteBtn) {
                console.log('没有找到删除按钮，任务完成');
                break;
            }
            
            deleteBtn.click();
            
            // 等待1-3秒随机时间
            const secondWait = getRandomTime(1, 3);
            console.log(`等待${secondWait/1000}秒...`);
            await sleep(secondWait);
            
            // 3. 找到并点击确认按钮
            const confirmBtn = document.querySelector('.woo-button-main.woo-button-flat.woo-button-primary.woo-button-m.woo-button-round.woo-dialog-btn');
            if(!confirmBtn) {
                console.log('没有找到确认按钮，任务完成');
                break;
            }
            
            confirmBtn.click();
            
            // 等待5-10秒随机时间后进行下一轮
            const nextRoundWait = getRandomTime(5, 10);
            console.log(`本轮完成，等待${nextRoundWait/1000}秒后开始下一轮...`);
            await sleep(nextRoundWait);
            
        } catch(error) {
            console.error('执行过程中出错:', error);
            break;
        }
    }
}

// 执行删除操作
console.log('开始执行删除操作...');
deleteItems().then(() => {
    console.log('删除操作已完成');
}).catch(error => {
    console.error('执行过程中出错:', error);
});
